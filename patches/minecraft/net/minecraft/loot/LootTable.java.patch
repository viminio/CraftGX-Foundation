--- a/net/minecraft/loot/LootTable.java
+++ b/net/minecraft/loot/LootTable.java
@@ -8,6 +_,7 @@
 import com.google.gson.JsonParseException;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
+import com.mohistmc.util.i18n.i18n;
 import java.lang.reflect.Type;
 import java.util.Collections;
 import java.util.Iterator;
@@ -15,6 +_,7 @@
 import java.util.Random;
 import java.util.function.BiFunction;
 import java.util.function.Consumer;
+import java.util.stream.Collectors;
 import net.minecraft.inventory.IInventory;
 import net.minecraft.item.ItemStack;
 import net.minecraft.loot.functions.ILootFunction;
@@ -25,19 +_,22 @@
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
+import org.bukkit.event.world.LootGenerateEvent;
 
 public class LootTable {
    private static final Logger field_186465_b = LogManager.getLogger();
    public static final LootTable field_186464_a = new LootTable(LootParameterSets.field_216260_a, new LootPool[0], new ILootFunction[0]);
    public static final LootParameterSet field_216126_b = LootParameterSets.field_216266_g;
    private final LootParameterSet field_216127_d;
-   private final LootPool[] field_186466_c;
+   private final List<LootPool> field_186466_c;
    private final ILootFunction[] field_216128_f;
    private final BiFunction<ItemStack, LootContext, ItemStack> field_216129_g;
 
    private LootTable(LootParameterSet p_i51265_1_, LootPool[] p_i51265_2_, ILootFunction[] p_i51265_3_) {
       this.field_216127_d = p_i51265_1_;
-      this.field_186466_c = p_i51265_2_;
+      this.field_186466_c = Lists.newArrayList(p_i51265_2_);
       this.field_216128_f = p_i51265_3_;
       this.field_216129_g = LootFunctionManager.func_216241_a(p_i51265_3_);
    }
@@ -70,11 +_,12 @@
 
          p_216114_1_.func_186490_b(this);
       } else {
-         field_186465_b.warn("Detected infinite loop in loot tables");
+         field_186465_b.warn(i18n.get("loottable.1"));
       }
 
    }
 
+   @Deprecated //Use other method or manually call ForgeHooks.modifyLoot
    public void func_216120_b(LootContext p_216120_1_, Consumer<ItemStack> p_216120_2_) {
       this.func_216114_a(p_216120_1_, func_216124_a(p_216120_2_));
    }
@@ -82,6 +_,7 @@
    public List<ItemStack> func_216113_a(LootContext p_216113_1_) {
       List<ItemStack> list = Lists.newArrayList();
       this.func_216120_b(p_216113_1_, list::add);
+      list = net.minecraftforge.common.ForgeHooks.modifyLoot(this.getLootTableId(), list, p_216113_1_);
       return list;
    }
 
@@ -90,8 +_,8 @@
    }
 
    public void func_227506_a_(ValidationTracker p_227506_1_) {
-      for(int i = 0; i < this.field_186466_c.length; ++i) {
-         this.field_186466_c[i].func_227505_a_(p_227506_1_.func_227534_b_(".pools[" + i + "]"));
+      for(int i = 0; i < this.field_186466_c.size(); ++i) {
+         this.field_186466_c.get(i).func_227505_a_(p_227506_1_.func_227534_b_(".pools[" + i + "]"));
       }
 
       for(int j = 0; j < this.field_216128_f.length; ++j) {
@@ -103,22 +_,57 @@
    public void func_216118_a(IInventory p_216118_1_, LootContext p_216118_2_) {
       List<ItemStack> list = this.func_216113_a(p_216118_2_);
       Random random = p_216118_2_.func_216032_b();
-      List<Integer> list1 = this.func_186459_a(p_216118_1_, random);
-      this.func_186463_a(list, list1.size(), random);
-
-      for(ItemStack itemstack : list) {
-         if (list1.isEmpty()) {
-            field_186465_b.warn("Tried to over-fill a container");
-            return;
-         }
-
-         if (itemstack.func_190926_b()) {
-            p_216118_1_.func_70299_a(list1.remove(list1.size() - 1), ItemStack.field_190927_a);
-         } else {
-            p_216118_1_.func_70299_a(list1.remove(list1.size() - 1), itemstack);
-         }
-      }
-
+      // Mohist start
+      if (p_216118_2_.func_216033_a(LootParameters.field_237457_g_) && p_216118_2_.func_216033_a(LootParameters.field_216281_a)) {
+         // CraftBukkit start
+         LootGenerateEvent event = CraftEventFactory.callLootGenerateEvent(p_216118_1_, this, p_216118_2_, list, false);
+         if (event.isCancelled()) {
+            return;
+         }
+         list = event.getLoot().stream().map(CraftItemStack::asNMSCopy).collect(Collectors.toList());
+         // CraftBukkit end
+      }
+      // Mohist end
+      List<Integer> list1 = this.func_186459_a(p_216118_1_, random);
+      this.func_186463_a(list, list1.size(), random);
+
+      for(ItemStack itemstack : list) {
+         if (list1.isEmpty()) {
+            field_186465_b.warn(i18n.get("loottable.2"));
+            return;
+         }
+
+         if (itemstack.func_190926_b()) {
+            p_216118_1_.func_70299_a(list1.remove(list1.size() - 1), ItemStack.field_190927_a);
+         } else {
+            p_216118_1_.func_70299_a(list1.remove(list1.size() - 1), itemstack);
+         }
+      }
+   }
+
+   public void fillInventory(IInventory p_216118_1_, LootContext context, boolean plugin) {
+      List<ItemStack> list = this.func_216113_a(context);
+      Random random = context.func_216032_b();
+      LootGenerateEvent event = CraftEventFactory.callLootGenerateEvent(p_216118_1_, this, context, list, plugin);
+      if (event.isCancelled()) {
+         return;
+      }
+      list = event.getLoot().stream().map(CraftItemStack::asNMSCopy).collect(Collectors.toList());
+      List<Integer> list1 = this.func_186459_a(p_216118_1_, random);
+      this.func_186463_a(list, list1.size(), random);
+
+      for(ItemStack itemstack : list) {
+         if (list1.isEmpty()) {
+            field_186465_b.warn(i18n.get("loottable.2"));
+            return;
+         }
+
+         if (itemstack.func_190926_b()) {
+            p_216118_1_.func_70299_a(list1.remove(list1.size() - 1), ItemStack.field_190927_a);
+         } else {
+            p_216118_1_.func_70299_a(list1.remove(list1.size() - 1), itemstack);
+         }
+      }
    }
 
    private void func_186463_a(List<ItemStack> p_186463_1_, int p_186463_2_, Random p_186463_3_) {
@@ -173,6 +_,48 @@
       return new LootTable.Builder();
    }
 
+   //======================== FORGE START =============================================
+   private boolean isFrozen = false;
+   public void freeze() {
+      this.isFrozen = true;
+      this.field_186466_c.forEach(LootPool::freeze);
+   }
+   public boolean isFrozen(){ return this.isFrozen; }
+   private void checkFrozen() {
+      if (this.isFrozen())
+         throw new RuntimeException("Attempted to modify LootTable after being finalized!");
+   }
+
+   private ResourceLocation lootTableId;
+   public void setLootTableId(final ResourceLocation id) {
+      if (this.lootTableId != null) throw new IllegalStateException("Attempted to rename loot table from '" + this.lootTableId + "' to '" + id + "': this is not supported");
+      this.lootTableId = java.util.Objects.requireNonNull(id);
+   }
+   public ResourceLocation getLootTableId() { return this.lootTableId; }
+
+   public LootPool getPool(String name) {
+      return field_186466_c.stream().filter(e -> name.equals(e.getName())).findFirst().orElse(null);
+   }
+
+   public LootPool removePool(String name) {
+      checkFrozen();
+      for (LootPool pool : this.field_186466_c) {
+         if (name.equals(pool.getName())) {
+            this.field_186466_c.remove(pool);
+            return pool;
+         }
+      }
+      return null;
+   }
+
+   public void addPool(LootPool pool) {
+      checkFrozen();
+      if (field_186466_c.stream().anyMatch(e -> e == pool || e.getName() != null && e.getName().equals(pool.getName())))
+         throw new RuntimeException("Attempted to add a duplicate pool to loot table: " + pool.getName());
+      this.field_186466_c.add(pool);
+   }
+   //======================== FORGE END ===============================================
+
    public static class Builder implements ILootFunctionConsumer<LootTable.Builder> {
       private final List<LootPool> field_216041_a = Lists.newArrayList();
       private final List<ILootFunction> field_216042_b = Lists.newArrayList();
@@ -227,7 +_,7 @@
             }
          }
 
-         if (p_serialize_1_.field_186466_c.length > 0) {
+         if (!p_serialize_1_.field_186466_c.isEmpty()) {
             jsonobject.add("pools", p_serialize_3_.serialize(p_serialize_1_.field_186466_c));
          }
 
