--- a/net/minecraft/loot/LootTableManager.java
+++ b/net/minecraft/loot/LootTableManager.java
@@ -4,6 +_,7 @@
 import com.google.common.collect.ImmutableMap.Builder;
 import com.google.gson.Gson;
 import com.google.gson.JsonElement;
+import com.mohistmc.util.i18n.i18n;
 import java.util.Map;
 import java.util.Set;
 import net.minecraft.client.resources.JsonReloadListener;
@@ -17,6 +_,7 @@
    private static final Logger field_186525_a = LogManager.getLogger();
    private static final Gson field_186526_b = LootSerializers.func_237388_c_().create();
    private Map<ResourceLocation, LootTable> field_186527_c = ImmutableMap.of();
+   public Map<LootTable, ResourceLocation> lootTableToKey = ImmutableMap.of(); // CraftBukkit
    private final LootPredicateManager field_227507_d_;
 
    public LootTableManager(LootPredicateManager p_i225887_1_) {
@@ -32,15 +_,15 @@
       Builder<ResourceLocation, LootTable> builder = ImmutableMap.builder();
       JsonElement jsonelement = p_212853_1_.remove(LootTables.field_186419_a);
       if (jsonelement != null) {
-         field_186525_a.warn("Datapack tried to redefine {} loot table, ignoring", (Object)LootTables.field_186419_a);
+         field_186525_a.warn(i18n.get("loottablemanager.1", (Object)LootTables.field_186419_a));
       }
 
       p_212853_1_.forEach((p_237403_1_, p_237403_2_) -> {
-         try {
-            LootTable loottable = field_186526_b.fromJson(p_237403_2_, LootTable.class);
+         try (net.minecraft.resources.IResource res = p_212853_2_.func_199002_a(getPreparedPath(p_237403_1_));){
+            LootTable loottable = net.minecraftforge.common.ForgeHooks.loadLootTable(field_186526_b, p_237403_1_, p_237403_2_, res == null || !res.func_199026_d().equals("Default"), this);
             builder.put(p_237403_1_, loottable);
          } catch (Exception exception) {
-            field_186525_a.error("Couldn't parse loot table {}", p_237403_1_, exception);
+            //LOGGER.error(i18n.get("loottablemanager.2", p_237403_1_), exception);
          }
 
       });
@@ -54,6 +_,11 @@
          field_186525_a.warn("Found validation problem in " + p_215303_0_ + ": " + p_215303_1_);
       });
       this.field_186527_c = immutablemap;
+      // CraftBukkit start - build a reversed registry map
+      ImmutableMap.Builder<LootTable, ResourceLocation> lootTableToKeyBuilder = ImmutableMap.builder();
+      this.field_186527_c.forEach((lootTable, key) -> lootTableToKeyBuilder.put(key, lootTable));
+      this.lootTableToKey = lootTableToKeyBuilder.build();
+      // CraftBukkit end
    }
 
    public static void func_227508_a_(ValidationTracker p_227508_0_, ResourceLocation p_227508_1_, LootTable p_227508_2_) {
