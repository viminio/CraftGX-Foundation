--- a/net/minecraft/server/management/UserList.java
+++ b/net/minecraft/server/management/UserList.java
@@ -8,6 +_,7 @@
 import com.google.gson.JsonArray;
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
+import com.mohistmc.util.i18n.i18n;
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
 import java.io.File;
@@ -42,7 +_,7 @@
       try {
          this.func_152678_f();
       } catch (IOException ioexception) {
-         field_152693_a.warn("Could not save the list after adding a user.", (Throwable)ioexception);
+         field_152693_a.warn(i18n.get("userlist.1", (Throwable)ioexception));
       }
 
    }
@@ -50,7 +_,7 @@
    @Nullable
    public V func_152683_b(K p_152683_1_) {
       this.func_152680_h();
-      return this.field_152696_d.get(this.func_152681_a(p_152683_1_));
+      return (V)(this.field_152696_d.get(this.func_152681_a(p_152683_1_)));
    }
 
    public void func_152684_c(K p_152684_1_) {
@@ -59,7 +_,7 @@
       try {
          this.func_152678_f();
       } catch (IOException ioexception) {
-         field_152693_a.warn("Could not save the list after removing a user.", (Throwable)ioexception);
+         field_152693_a.warn(i18n.get("userlist.2", (Throwable)ioexception));
       }
 
    }
@@ -72,6 +_,12 @@
       return this.field_152696_d.keySet().toArray(new String[this.field_152696_d.size()]);
    }
 
+   // CraftBukkit start
+   public Collection<V> getValues() {
+      return this.field_152696_d.values();
+   }
+   // CraftBukkit end
+
    public boolean func_152690_d() {
       return this.field_152696_d.size() < 1;
    }
@@ -130,6 +_,13 @@
                   this.field_152696_d.put(this.func_152681_a(userlistentry.func_152640_f()), (V)userlistentry);
                }
             }
+            // Spigot Start
+         } catch ( com.google.gson.JsonParseException | NullPointerException ex ) {
+            org.bukkit.Bukkit.getLogger().log(java.util.logging.Level.WARNING, "Unable to read file " + this.field_152695_c + ", backing it up to {0}.backup and creating new copy.", ex);
+            File backup = new File(this.field_152695_c + ".backup");
+            this.field_152695_c.renameTo(backup);
+            this.field_152695_c.delete();
+            // Spigot End
          }
 
       }
