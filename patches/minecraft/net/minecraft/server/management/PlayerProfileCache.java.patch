--- a/net/minecraft/server/management/PlayerProfileCache.java
+++ b/net/minecraft/server/management/PlayerProfileCache.java
@@ -10,6 +_,7 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
+import com.mohistmc.util.i18n.i18n;
 import com.mojang.authlib.Agent;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.GameProfileRepository;
@@ -37,6 +_,7 @@
 import net.minecraft.entity.player.PlayerEntity;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.spigotmc.SpigotConfig;
 
 public class PlayerProfileCache {
    private static final Logger field_242114_a = LogManager.getLogger();
@@ -106,7 +_,7 @@
       Date date = calendar.getTime();
       PlayerProfileCache.ProfileEntry playerprofilecache$profileentry = new PlayerProfileCache.ProfileEntry(p_152649_1_, date);
       this.func_242118_a(playerprofilecache$profileentry);
-      this.func_152658_c();
+      if( !org.spigotmc.SpigotConfig.saveUserCacheOnStopOnly ) this.func_152658_c();  // Spigot - skip saving if disabled
    }
 
    private long func_242123_d() {
@@ -130,20 +_,27 @@
          playerprofilecache$profileentry.func_242126_a(this.func_242123_d());
          gameprofile = playerprofilecache$profileentry.func_152668_a();
       } else {
-         gameprofile = func_187319_a(this.field_187323_g, s);
+         gameprofile = func_187319_a(this.field_187323_g, p_152655_1_); // Spigot - use correct case for offline players
          if (gameprofile != null) {
             this.func_152649_a(gameprofile);
             flag = false;
          }
       }
 
-      if (flag) {
+      if (flag && !org.spigotmc.SpigotConfig.saveUserCacheOnStopOnly) { // Spigot - skip saving if disabled
          this.func_152658_c();
       }
 
       return gameprofile;
    }
 
+   // Paper start
+   @Nullable public GameProfile getProfileIfCached(String name) {
+      PlayerProfileCache.ProfileEntry entry = this.field_152661_c.get(name.toLowerCase(Locale.ROOT));
+      return entry == null ? null : entry.func_152668_a();
+   }
+   // Paper end
+
    @Nullable
    public GameProfile func_152652_a(UUID p_152652_1_) {
       PlayerProfileCache.ProfileEntry playerprofilecache$profileentry = this.field_152662_d.get(p_152652_1_);
@@ -177,6 +_,11 @@
 
          });
       } catch (FileNotFoundException filenotfoundexception) {
+         // Spigot Start
+      } catch (com.google.gson.JsonSyntaxException | NullPointerException ex) {
+         UserList.field_152693_a.warn(i18n.get( "playerprofilecache.1" ));
+         this.field_152665_g.delete();
+         // Spigot End
       } catch (JsonParseException | IOException ioexception) {
          field_242114_a.warn("Failed to load profile cache {}", this.field_152665_g, ioexception);
       }
@@ -187,7 +_,7 @@
    public void func_152658_c() {
       JsonArray jsonarray = new JsonArray();
       DateFormat dateformat = func_242124_e();
-      this.func_242117_a(1000).forEach((p_242120_2_) -> {
+      this.func_242117_a(SpigotConfig.userCacheCap).forEach((p_242120_2_) -> {  // Spigot
          jsonarray.add(func_242119_a(p_242120_2_, dateformat));
       });
       String s = this.field_152660_b.toJson((JsonElement)jsonarray);
