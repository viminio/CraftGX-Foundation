--- a/net/minecraft/network/status/ServerStatusNetHandler.java
+++ b/net/minecraft/network/status/ServerStatusNetHandler.java
@@ -1,12 +_,19 @@
 package net.minecraft.network.status;
 
+import com.mojang.authlib.GameProfile;
+import java.util.ArrayList;
+import java.util.List;
+import net.minecraft.entity.player.ServerPlayerEntity;
 import net.minecraft.network.NetworkManager;
+import net.minecraft.network.ServerStatusResponse;
 import net.minecraft.network.status.client.CPingPacket;
 import net.minecraft.network.status.client.CServerQueryPacket;
 import net.minecraft.network.status.server.SPongPacket;
 import net.minecraft.network.status.server.SServerInfoPacket;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.util.SharedConstants;
 import net.minecraft.util.text.ITextComponent;
+import net.minecraft.util.text.StringTextComponent;
 import net.minecraft.util.text.TranslationTextComponent;
 
 public class ServerStatusNetHandler implements IServerStatusNetHandler {
@@ -32,8 +_,38 @@
          this.field_147313_b.func_150718_a(field_183007_a);
       } else {
          this.field_183008_d = true;
-         this.field_147313_b.func_179290_a(new SServerInfoPacket(this.field_147314_a.func_147134_at()));
+         // CraftBukkit start
+         //this.networkManager.sendPacket(new SServerInfoPacket(this.server.getServerStatusResponse()));
+         Object[] players = field_147314_a.func_184103_al().field_72404_b.toArray();
+
+         com.mohistmc.bukkit.ServerListPingEvent event = new com.mohistmc.bukkit.ServerListPingEvent(field_147313_b, field_147314_a);
+         this.field_147314_a.server.getPluginManager().callEvent(event);
+         List<GameProfile> profiles = new ArrayList<GameProfile>(players.length);
+         for (Object player : players) {
+            if (player != null) {
+               profiles.add(((ServerPlayerEntity) player).func_146103_bH());
+            }
+         }
+         ServerStatusResponse.Players playerSample = new ServerStatusResponse.Players(event.getMaxPlayers(), profiles.size());
+         // Spigot Start
+         if ( !profiles.isEmpty() )
+         {
+            java.util.Collections.shuffle( profiles ); // This sucks, its inefficient but we have no simple way of doing it differently
+            profiles = profiles.subList( 0, Math.min( profiles.size(), org.spigotmc.SpigotConfig.playerSample ) ); // Cap the sample to n (or less) displayed players, ie: Vanilla behaviour
+         }
+         // Spigot End
+         playerSample.func_151330_a(profiles.toArray(new GameProfile[profiles.size()]));
+
+         ServerStatusResponse ping = new ServerStatusResponse();
+         ping.func_151320_a(event.icon.value);
+         ping.func_151315_a(new StringTextComponent(event.getMotd()));
+         ping.func_151319_a(playerSample);
+         int version = SharedConstants.func_215069_a().getProtocolVersion();
+         ping.func_151321_a(new ServerStatusResponse.Version(field_147314_a.getServerModName() + " " + field_147314_a.func_71249_w(), version));
+         ping.setForgeData(this.field_147314_a.func_147134_at().getForgeData());
+         this.field_147313_b.func_179290_a(new SServerInfoPacket(ping));
       }
+      // CraftBukkit end
    }
 
    public void func_147311_a(CPingPacket p_147311_1_) {
