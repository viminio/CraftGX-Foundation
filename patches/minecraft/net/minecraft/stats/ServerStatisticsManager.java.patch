--- a/net/minecraft/stats/ServerStatisticsManager.java
+++ b/net/minecraft/stats/ServerStatisticsManager.java
@@ -8,6 +_,7 @@
 import com.google.gson.JsonPrimitive;
 import com.google.gson.internal.Streams;
 import com.google.gson.stream.JsonReader;
+import com.mohistmc.util.i18n.i18n;
 import com.mojang.datafixers.DataFixer;
 import it.unimi.dsi.fastutil.objects.Object2IntMap;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
@@ -43,28 +_,37 @@
    public ServerStatisticsManager(MinecraftServer p_i45306_1_, File p_i45306_2_) {
       this.field_150890_c = p_i45306_1_;
       this.field_150887_d = p_i45306_2_;
+      // Spigot start
+      for ( Map.Entry<ResourceLocation, Integer> entry : org.spigotmc.SpigotConfig.forcedStats.entrySet() )
+      {
+         Stat<ResourceLocation> wrapper = Stats.field_199092_j.func_199076_b( entry.getKey() );
+         this.field_150875_a.put( wrapper, entry.getValue().intValue() );
+      }
+      // Spigot end
       if (p_i45306_2_.isFile()) {
          try {
             this.func_199062_a(p_i45306_1_.func_195563_aC(), FileUtils.readFileToString(p_i45306_2_));
          } catch (IOException ioexception) {
-            field_150889_b.error("Couldn't read statistics file {}", p_i45306_2_, ioexception);
+            field_150889_b.error(i18n.get("serverstatisticsmanager.1", p_i45306_2_), ioexception);
          } catch (JsonParseException jsonparseexception) {
-            field_150889_b.error("Couldn't parse statistics file {}", p_i45306_2_, jsonparseexception);
+            field_150889_b.error(i18n.get("serverstatisticsmanager.2", p_i45306_2_), jsonparseexception);
          }
       }
 
    }
 
    public void func_150883_b() {
+      if ( org.spigotmc.SpigotConfig.disableStatSaving ) return; // Spigot
       try {
          FileUtils.writeStringToFile(this.field_150887_d, this.func_199061_b());
       } catch (IOException ioexception) {
-         field_150889_b.error("Couldn't save stats", (Throwable)ioexception);
+         field_150889_b.error(i18n.get("serverstatisticsmanager.3"), (Throwable)ioexception);
       }
 
    }
 
    public void func_150873_a(PlayerEntity p_150873_1_, Stat<?> p_150873_2_, int p_150873_3_) {
+      if ( org.spigotmc.SpigotConfig.disableStatSaving ) return; // Spigot
       super.func_150873_a(p_150873_1_, p_150873_2_, p_150873_3_);
       this.field_150888_e.add(p_150873_2_);
    }
@@ -80,7 +_,7 @@
          jsonreader.setLenient(false);
          JsonElement jsonelement = Streams.parse(jsonreader);
          if (jsonelement.isJsonNull()) {
-            field_150889_b.error("Unable to parse Stat data from {}", (Object)this.field_150887_d);
+            field_150889_b.error(i18n.get("serverstatisticsmanager.4", (Object)this.field_150887_d));
             return;
          }
 
@@ -103,21 +_,21 @@
                            Util.func_215077_a(this.func_219728_a(p_219731_3_, s1), (p_219730_3_) -> {
                               this.field_150875_a.put(p_219730_3_, compoundnbt2.func_74762_e(s1));
                            }, () -> {
-                              field_150889_b.warn("Invalid statistic in {}: Don't know what {} is", this.field_150887_d, s1);
+                              field_150889_b.warn(i18n.get("serverstatisticsmanager.5", this.field_150887_d, s1));
                            });
                         } else {
-                           field_150889_b.warn("Invalid statistic value in {}: Don't know what {} is for key {}", this.field_150887_d, compoundnbt2.func_74781_a(s1), s1);
+                           field_150889_b.warn(i18n.get("serverstatisticsmanager.6", this.field_150887_d, compoundnbt2.func_74781_a(s1), s1));
                         }
                      }
 
                   }, () -> {
-                     field_150889_b.warn("Invalid statistic type in {}: Don't know what {} is", this.field_150887_d, s);
+                     field_150889_b.warn(i18n.get("serverstatisticsmanager.7", this.field_150887_d, s));
                   });
                }
             }
          }
       } catch (IOException | JsonParseException jsonparseexception) {
-         field_150889_b.error("Unable to parse Stat data from {}", this.field_150887_d, jsonparseexception);
+         field_150889_b.error(i18n.get("serverstatisticsmanager.8", this.field_150887_d, jsonparseexception));
       }
 
    }
