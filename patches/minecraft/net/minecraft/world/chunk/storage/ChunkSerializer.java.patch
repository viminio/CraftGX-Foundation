--- a/net/minecraft/world/chunk/storage/ChunkSerializer.java
+++ b/net/minecraft/world/chunk/storage/ChunkSerializer.java
@@ -15,12 +_,10 @@
 import net.minecraft.block.Block;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
+import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.fluid.Fluid;
 import net.minecraft.fluid.Fluids;
-import net.minecraft.nbt.CompoundNBT;
-import net.minecraft.nbt.ListNBT;
-import net.minecraft.nbt.LongArrayNBT;
-import net.minecraft.nbt.ShortNBT;
+import net.minecraft.nbt.*;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.SharedConstants;
 import net.minecraft.util.math.BlockPos;
@@ -64,7 +_,7 @@
       CompoundNBT compoundnbt = p_222656_4_.func_74775_l("Level");
       ChunkPos chunkpos = new ChunkPos(compoundnbt.func_74762_e("xPos"), compoundnbt.func_74762_e("zPos"));
       if (!Objects.equals(p_222656_3_, chunkpos)) {
-         field_222658_a.error("Chunk file at {} is in the wrong location; relocating. (Expected {}, got {})", p_222656_3_, p_222656_3_, chunkpos);
+         field_222658_a.error(com.mohistmc.util.i18n.i18n.get("chunkserializer.1", p_222656_3_, p_222656_3_, chunkpos));
       }
 
       BiomeContainer biomecontainer = new BiomeContainer(p_222656_0_.func_241828_r().func_243612_b(Registry.field_239720_u_), p_222656_3_, biomeprovider, compoundnbt.func_150297_b("Biomes", 11) ? compoundnbt.func_74759_k("Biomes") : null);
@@ -131,7 +_,14 @@
 
          ichunk = new Chunk(p_222656_0_.func_201672_e(), p_222656_3_, biomecontainer, upgradedata, iticklist, iticklist1, k1, achunksection, (p_222648_1_) -> {
             func_222650_a(compoundnbt, p_222648_1_);
+            // CraftBukkit start - load chunk persistent data from nbt
+            INBT persistentBase = compoundnbt.func_74781_a("ChunkBukkitValues");
+            if (persistentBase instanceof CompoundNBT) {
+               p_222648_1_.persistentDataContainer.putAll((CompoundNBT) persistentBase);
+            }
+            // CraftBukkit end
          });
+         if (compoundnbt.func_74764_b("ForgeCaps")) ((Chunk)ichunk).readCapsFromNBT(compoundnbt.func_74775_l("ForgeCaps"));
       } else {
          ChunkPrimer chunkprimer = new ChunkPrimer(p_222656_3_, upgradedata, achunksection, chunkprimerticklist, chunkprimerticklist1);
          chunkprimer.func_225548_a_(biomecontainer);
@@ -144,7 +_,7 @@
 
          if (!flag && chunkprimer.func_201589_g().func_209003_a(ChunkStatus.field_222614_j)) {
             for(BlockPos blockpos : BlockPos.func_191531_b(p_222656_3_.func_180334_c(), 0, p_222656_3_.func_180333_d(), p_222656_3_.func_180332_e(), 255, p_222656_3_.func_180330_f())) {
-               if (ichunk.func_180495_p(blockpos).func_185906_d() != 0) {
+               if (ichunk.func_180495_p(blockpos).getLightValue(ichunk, blockpos) != 0) {
                   chunkprimer.func_201637_h(blockpos);
                }
             }
@@ -167,7 +_,7 @@
       Heightmap.func_222690_a(ichunk, enumset);
       CompoundNBT compoundnbt4 = compoundnbt.func_74775_l("Structures");
       ichunk.func_201612_a(func_235967_a_(p_222656_1_, compoundnbt4, p_222656_0_.func_72905_C()));
-      ichunk.func_201606_b(func_227075_a_(p_222656_3_, compoundnbt4));
+      net.minecraftforge.common.ForgeHooks.fixNullStructureReferences(ichunk, func_227075_a_(p_222656_3_, compoundnbt4));
       if (compoundnbt.func_74767_n("shouldSave")) {
          ichunk.func_177427_f(true);
       }
@@ -183,6 +_,7 @@
       }
 
       if (chunkstatus$type == ChunkStatus.Type.LEVELCHUNK) {
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkDataEvent.Load(ichunk, p_222656_4_, chunkstatus$type));
          return new ChunkPrimerWrapper((Chunk)ichunk);
       } else {
          ChunkPrimer chunkprimer1 = (ChunkPrimer)ichunk;
@@ -216,6 +_,8 @@
             chunkprimer1.func_205767_a(generationstage$carving, BitSet.valueOf(compoundnbt5.func_74770_j(s1)));
          }
 
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkDataEvent.Load(ichunk, p_222656_4_, chunkstatus$type));
+
          return chunkprimer1;
       }
    }
@@ -288,18 +_,41 @@
 
       compoundnbt1.func_218657_a("TileEntities", listnbt1);
       ListNBT listnbt2 = new ListNBT();
+
       if (p_222645_1_.func_201589_g().func_202129_d() == ChunkStatus.Type.LEVELCHUNK) {
          Chunk chunk = (Chunk)p_222645_1_;
+         // CraftBukkit start - store chunk persistent data in nbt
+         if (!chunk.persistentDataContainer.isEmpty()) {
+            compoundnbt1.func_218657_a("ChunkBukkitValues", chunk.persistentDataContainer.toTagCompound());
+         }
+         // CraftBukkit end
          chunk.func_177409_g(false);
 
          for(int k = 0; k < chunk.func_177429_s().length; ++k) {
             for(Entity entity : chunk.func_177429_s()[k]) {
                CompoundNBT compoundnbt3 = new CompoundNBT();
+
+               // Paper start
+               if (!entity.func_70089_S() || hasPlayerPassenger(entity)) {
+                  continue;
+               }
+               // Paper end
+               try {
                if (entity.func_70039_c(compoundnbt3)) {
                   chunk.func_177409_g(true);
                   listnbt2.add(compoundnbt3);
                }
+               } catch (Exception e) {
+                  LogManager.getLogger().error("An Entity type {} has thrown an exception trying to write state. It will not persist. Report this to the mod author", entity.func_200600_R(), e);
+               }
             }
+         }
+
+         try {
+             final CompoundNBT capTag = chunk.writeCapsToNBT();
+             if (capTag != null) compoundnbt1.func_218657_a("ForgeCaps", capTag);
+         } catch (Exception exception) {
+             LogManager.getLogger().error("A capability provider has thrown an exception trying to write state. It will not persist. Report this to the mod author", exception);
          }
       } else {
          ChunkPrimer chunkprimer = (ChunkPrimer)p_222645_1_;
@@ -350,6 +_,20 @@
       return compoundnbt;
    }
 
+   // Paper start - this is saved with the player
+   private static boolean hasPlayerPassenger(Entity entity) {
+       for (Entity passenger : entity.field_184244_h) {
+           if (passenger instanceof PlayerEntity) {
+               return true;
+           }
+           if (hasPlayerPassenger(passenger)) {
+               return true;
+           }
+       }
+       return false;
+   }
+   // Paper end
+
    public static ChunkStatus.Type func_222651_a(@Nullable CompoundNBT p_222651_0_) {
       if (p_222651_0_ != null) {
          ChunkStatus chunkstatus = ChunkStatus.func_222591_a(p_222651_0_.func_74775_l("Level").func_74779_i("Status"));
@@ -419,7 +_,7 @@
          String s1 = s.toLowerCase(Locale.ROOT);
          Structure<?> structure = Structure.field_236365_a_.get(s1);
          if (structure == null) {
-            field_222658_a.error("Unknown structure start: {}", (Object)s1);
+            field_222658_a.error(com.mohistmc.util.i18n.i18n.get("chunkserializer.2", (Object)s1));
          } else {
             StructureStart<?> structurestart = Structure.func_236393_a_(p_235967_0_, compoundnbt.func_74775_l(s), p_235967_2_);
             if (structurestart != null) {
@@ -439,7 +_,7 @@
          map.put(Structure.field_236365_a_.get(s.toLowerCase(Locale.ROOT)), new LongOpenHashSet(Arrays.stream(compoundnbt.func_197645_o(s)).filter((p_227074_2_) -> {
             ChunkPos chunkpos = new ChunkPos(p_227074_2_);
             if (chunkpos.func_226661_a_(p_227075_0_) > 8) {
-               field_222658_a.warn("Found invalid structure reference [ {} @ {} ] for chunk {}.", s, chunkpos, p_227075_0_);
+               field_222658_a.warn(com.mohistmc.util.i18n.i18n.get("chunkserializer.3", s, chunkpos, p_227075_0_));
                return false;
             } else {
                return true;
